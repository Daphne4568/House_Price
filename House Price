{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyOXMKprxPHWE2FBc1D7mUb8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["**Import Libaries and Dataset**"],"metadata":{"id":"i3UUgzgqx5uz"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"UOlr_eLwxzEJ","executionInfo":{"status":"ok","timestamp":1698175614554,"user_tz":-180,"elapsed":1528,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.model_selection import train_test_split\n","import math\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet\n","from sklearn.tree import DecisionTreeRegressor\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.svm import SVR\n","from sklearn.neighbors import KNeighborsRegressor\n","from sklearn.ensemble import GradientBoostingRegressor, AdaBoostRegressor\n","from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n","from sklearn.model_selection import cross_val_score,GridSearchCV\n","%matplotlib inline"]},{"cell_type":"code","source":["from google.colab import files\n","uploaded=files.upload()"],"metadata":{"id":"BtVrYN5dyGbv","colab":{"base_uri":"https://localhost:8080/","height":359},"executionInfo":{"status":"error","timestamp":1698175761329,"user_tz":-180,"elapsed":11459,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"880857b3-b570-44f5-c16b-577aaa544ff2"},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-21dd59e2-3666-4335-9d38-b0c8036195ef\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-21dd59e2-3666-4335-9d38-b0c8036195ef\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-49432676dcaa>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolab\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mfiles\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0muploaded\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfiles\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/files.py\u001b[0m in \u001b[0;36mupload\u001b[0;34m()\u001b[0m\n\u001b[1;32m     67\u001b[0m   \"\"\"\n\u001b[1;32m     68\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 69\u001b[0;31m   \u001b[0muploaded_files\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_upload_files\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmultiple\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     70\u001b[0m   \u001b[0;31m# Mapping from original filename to filename as saved locally.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     71\u001b[0m   \u001b[0mlocal_filenames\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/files.py\u001b[0m in \u001b[0;36m_upload_files\u001b[0;34m(multiple)\u001b[0m\n\u001b[1;32m    154\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    155\u001b[0m   \u001b[0;31m# First result is always an indication that the file picker has completed.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 156\u001b[0;31m   result = _output.eval_js(\n\u001b[0m\u001b[1;32m    157\u001b[0m       'google.colab._files._uploadFiles(\"{input_id}\", \"{output_id}\")'.format(\n\u001b[1;32m    158\u001b[0m           \u001b[0minput_id\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minput_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moutput_id\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0moutput_id\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/output/_js.py\u001b[0m in \u001b[0;36meval_js\u001b[0;34m(script, ignore_result, timeout_sec)\u001b[0m\n\u001b[1;32m     38\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mignore_result\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     39\u001b[0m     \u001b[0;32mreturn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 40\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0m_message\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_reply_from_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_sec\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     41\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mread_reply_from_input\u001b[0;34m(message_id, timeout_sec)\u001b[0m\n\u001b[1;32m     94\u001b[0m     \u001b[0mreply\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_read_next_input_message\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     95\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mreply\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0m_NOT_READY\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreply\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdict\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 96\u001b[0;31m       \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msleep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0.025\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     97\u001b[0m       \u001b[0;32mcontinue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     98\u001b[0m     if (\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"markdown","source":["**Observing Data**"],"metadata":{"id":"tDGwvGe18i2w"}},{"cell_type":"code","source":["df=pd.read_csv('Melbourne_housing_FULL.csv')\n","df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":173},"id":"6awJe2kWyRom","executionInfo":{"status":"ok","timestamp":1698163897401,"user_tz":-180,"elapsed":375,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"1304783d-6699-414f-c56b-67e26c265b7c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Suburb          Address  Rooms Type      Price Method SellerG  \\\n","0  Abbotsford    68 Studley St      2    h        NaN     SS  Jellis   \n","1  Abbotsford     85 Turner St      2    h  1480000.0      S  Biggin   \n","2  Abbotsford  25 Bloomburg St      2    h  1035000.0      S  Biggin   \n","\n","        Date  Distance  Postcode  ...  Bathroom  Car  Landsize  BuildingArea  \\\n","0  3/09/2016       2.5    3067.0  ...       1.0  1.0     126.0           NaN   \n","1  3/12/2016       2.5    3067.0  ...       1.0  1.0     202.0           NaN   \n","2  4/02/2016       2.5    3067.0  ...       1.0  0.0     156.0          79.0   \n","\n","   YearBuilt         CouncilArea Lattitude  Longtitude             Regionname  \\\n","0        NaN  Yarra City Council  -37.8014    144.9958  Northern Metropolitan   \n","1        NaN  Yarra City Council  -37.7996    144.9984  Northern Metropolitan   \n","2     1900.0  Yarra City Council  -37.8079    144.9934  Northern Metropolitan   \n","\n","  Propertycount  \n","0        4019.0  \n","1        4019.0  \n","2        4019.0  \n","\n","[3 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-5d51d70a-b7f7-4f29-9543-5ac024b73a8e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Suburb</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Method</th>\n","      <th>SellerG</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>...</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>BuildingArea</th>\n","      <th>YearBuilt</th>\n","      <th>CouncilArea</th>\n","      <th>Lattitude</th>\n","      <th>Longtitude</th>\n","      <th>Regionname</th>\n","      <th>Propertycount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Abbotsford</td>\n","      <td>68 Studley St</td>\n","      <td>2</td>\n","      <td>h</td>\n","      <td>NaN</td>\n","      <td>SS</td>\n","      <td>Jellis</td>\n","      <td>3/09/2016</td>\n","      <td>2.5</td>\n","      <td>3067.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>126.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Yarra City Council</td>\n","      <td>-37.8014</td>\n","      <td>144.9958</td>\n","      <td>Northern Metropolitan</td>\n","      <td>4019.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abbotsford</td>\n","      <td>85 Turner St</td>\n","      <td>2</td>\n","      <td>h</td>\n","      <td>1480000.0</td>\n","      <td>S</td>\n","      <td>Biggin</td>\n","      <td>3/12/2016</td>\n","      <td>2.5</td>\n","      <td>3067.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>202.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Yarra City Council</td>\n","      <td>-37.7996</td>\n","      <td>144.9984</td>\n","      <td>Northern Metropolitan</td>\n","      <td>4019.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Abbotsford</td>\n","      <td>25 Bloomburg St</td>\n","      <td>2</td>\n","      <td>h</td>\n","      <td>1035000.0</td>\n","      <td>S</td>\n","      <td>Biggin</td>\n","      <td>4/02/2016</td>\n","      <td>2.5</td>\n","      <td>3067.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>156.0</td>\n","      <td>79.0</td>\n","      <td>1900.0</td>\n","      <td>Yarra City Council</td>\n","      <td>-37.8079</td>\n","      <td>144.9934</td>\n","      <td>Northern Metropolitan</td>\n","      <td>4019.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5d51d70a-b7f7-4f29-9543-5ac024b73a8e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5d51d70a-b7f7-4f29-9543-5ac024b73a8e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5d51d70a-b7f7-4f29-9543-5ac024b73a8e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bb2a2d9a-bcba-43c5-9cdf-e5c0d2c87a37\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bb2a2d9a-bcba-43c5-9cdf-e5c0d2c87a37')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bb2a2d9a-bcba-43c5-9cdf-e5c0d2c87a37 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["print(f'Shape     : {df.shape}\\n'\n","      f'Size      : {df.size}\\n'\n","      f'Dimension : {df.ndim}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v-ThZJOJyZO3","executionInfo":{"status":"ok","timestamp":1698163899908,"user_tz":-180,"elapsed":3,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"2b430249-ae46-41af-de8c-be0529afa5e0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape     : (34857, 21)\n","Size      : 731997\n","Dimension : 2\n"]}]},{"cell_type":"code","source":["#Select Numerical and categorical features\n","kategorik_sutunlar = df.select_dtypes(include=['object', 'category']).columns\n","numerik_sutunlar = df.select_dtypes(include=['int64', 'float64']).columns\n","print(f'numerik_sutunlar- {numerik_sutunlar}\\n'\n","      f'kategorik_sutunlar- {kategorik_sutunlar}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eNhf5oxMycZK","executionInfo":{"status":"ok","timestamp":1698143693623,"user_tz":-180,"elapsed":326,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"a5913fd6-f8c0-4efd-ffcd-ca2ac1c4e374"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["numerik_sutunlar- Index(['Rooms', 'Price', 'Distance', 'Postcode', 'Bedroom2', 'Bathroom', 'Car',\n","       'Landsize', 'BuildingArea', 'YearBuilt', 'Lattitude', 'Longtitude',\n","       'Propertycount'],\n","      dtype='object')\n","kategorik_sutunlar- Index(['Suburb', 'Address', 'Type', 'Method', 'SellerG', 'Date', 'CouncilArea',\n","       'Regionname'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nG_xDH36ygFW","executionInfo":{"status":"ok","timestamp":1698163905796,"user_tz":-180,"elapsed":596,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"e18d93cb-1a7e-4d98-dca5-53cbba3fc74b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 34857 entries, 0 to 34856\n","Data columns (total 21 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   Suburb         34857 non-null  object \n"," 1   Address        34857 non-null  object \n"," 2   Rooms          34857 non-null  int64  \n"," 3   Type           34857 non-null  object \n"," 4   Price          27247 non-null  float64\n"," 5   Method         34857 non-null  object \n"," 6   SellerG        34857 non-null  object \n"," 7   Date           34857 non-null  object \n"," 8   Distance       34856 non-null  float64\n"," 9   Postcode       34856 non-null  float64\n"," 10  Bedroom2       26640 non-null  float64\n"," 11  Bathroom       26631 non-null  float64\n"," 12  Car            26129 non-null  float64\n"," 13  Landsize       23047 non-null  float64\n"," 14  BuildingArea   13742 non-null  float64\n"," 15  YearBuilt      15551 non-null  float64\n"," 16  CouncilArea    34854 non-null  object \n"," 17  Lattitude      26881 non-null  float64\n"," 18  Longtitude     26881 non-null  float64\n"," 19  Regionname     34854 non-null  object \n"," 20  Propertycount  34854 non-null  float64\n","dtypes: float64(12), int64(1), object(8)\n","memory usage: 5.6+ MB\n"]}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4R3X_vfjKWhh","executionInfo":{"status":"ok","timestamp":1698163907970,"user_tz":-180,"elapsed":2,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"02d4d30d-1ad4-481a-fd0d-5a12178f8309"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Suburb               0\n","Address              0\n","Rooms                0\n","Type                 0\n","Price             7610\n","Method               0\n","SellerG              0\n","Date                 0\n","Distance             1\n","Postcode             1\n","Bedroom2          8217\n","Bathroom          8226\n","Car               8728\n","Landsize         11810\n","BuildingArea     21115\n","YearBuilt        19306\n","CouncilArea          3\n","Lattitude         7976\n","Longtitude        7976\n","Regionname           3\n","Propertycount        3\n","dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EX3sVVBiykMe","executionInfo":{"status":"ok","timestamp":1698163910978,"user_tz":-180,"elapsed":427,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"698c6de9-9229-4d57-ebb6-be160e1148a9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.loc[df.duplicated(keep=False), :]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":176},"id":"D1lquhT0ymvq","executionInfo":{"status":"ok","timestamp":1698163912468,"user_tz":-180,"elapsed":3,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"2ab75f9c-c66b-43a6-93c5-77fb0427e223"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Suburb        Address  Rooms Type  Price Method SellerG  \\\n","15857  Nunawading  1/7 Lilian St      3    t    NaN     SP  Jellis   \n","15858  Nunawading  1/7 Lilian St      3    t    NaN     SP  Jellis   \n","\n","             Date  Distance  Postcode  ...  Bathroom  Car  Landsize  \\\n","15857  17/06/2017      15.4    3131.0  ...       3.0  2.0     405.0   \n","15858  17/06/2017      15.4    3131.0  ...       3.0  2.0     405.0   \n","\n","       BuildingArea  YearBuilt              CouncilArea Lattitude  Longtitude  \\\n","15857         226.0     2000.0  Manningham City Council -37.82678   145.16777   \n","15858         226.0     2000.0  Manningham City Council -37.82678   145.16777   \n","\n","                 Regionname Propertycount  \n","15857  Eastern Metropolitan        4973.0  \n","15858  Eastern Metropolitan        4973.0  \n","\n","[2 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-83c30c68-55fc-41e8-b329-37584a4f908d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Suburb</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Method</th>\n","      <th>SellerG</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>...</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>BuildingArea</th>\n","      <th>YearBuilt</th>\n","      <th>CouncilArea</th>\n","      <th>Lattitude</th>\n","      <th>Longtitude</th>\n","      <th>Regionname</th>\n","      <th>Propertycount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>15857</th>\n","      <td>Nunawading</td>\n","      <td>1/7 Lilian St</td>\n","      <td>3</td>\n","      <td>t</td>\n","      <td>NaN</td>\n","      <td>SP</td>\n","      <td>Jellis</td>\n","      <td>17/06/2017</td>\n","      <td>15.4</td>\n","      <td>3131.0</td>\n","      <td>...</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>405.0</td>\n","      <td>226.0</td>\n","      <td>2000.0</td>\n","      <td>Manningham City Council</td>\n","      <td>-37.82678</td>\n","      <td>145.16777</td>\n","      <td>Eastern Metropolitan</td>\n","      <td>4973.0</td>\n","    </tr>\n","    <tr>\n","      <th>15858</th>\n","      <td>Nunawading</td>\n","      <td>1/7 Lilian St</td>\n","      <td>3</td>\n","      <td>t</td>\n","      <td>NaN</td>\n","      <td>SP</td>\n","      <td>Jellis</td>\n","      <td>17/06/2017</td>\n","      <td>15.4</td>\n","      <td>3131.0</td>\n","      <td>...</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>405.0</td>\n","      <td>226.0</td>\n","      <td>2000.0</td>\n","      <td>Manningham City Council</td>\n","      <td>-37.82678</td>\n","      <td>145.16777</td>\n","      <td>Eastern Metropolitan</td>\n","      <td>4973.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-83c30c68-55fc-41e8-b329-37584a4f908d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-83c30c68-55fc-41e8-b329-37584a4f908d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-83c30c68-55fc-41e8-b329-37584a4f908d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-500b1d8c-19d1-4e3b-9504-a0d05510a3c2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-500b1d8c-19d1-4e3b-9504-a0d05510a3c2')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-500b1d8c-19d1-4e3b-9504-a0d05510a3c2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["#Clear Duplicate Data\n","df = df.drop_duplicates()\n","df .duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JdcPLT44yt63","executionInfo":{"status":"ok","timestamp":1698163914769,"user_tz":-180,"elapsed":311,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"105cd1d1-7db5-4c83-c135-b61ab022a07b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["#Detect outliers and replace outlier values\n","numerical_columns = df.select_dtypes(include=['int64', 'float64']).columns\n","\n","z_score_threshold = 3\n","\n","for col in numerical_columns:\n","    z_scores = (df[col] - df[col].mean())/df[col].std()\n","    outliers = (z_scores < -z_score_threshold) | (z_scores > z_score_threshold)\n","    print(\"Outlier counts of column:\", col, df[col][outliers].count())\n","    df[col][outliers] = np.nan # replace with nan"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SGTJjSMJGyhR","executionInfo":{"status":"ok","timestamp":1698163920602,"user_tz":-180,"elapsed":313,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"929a977b-3afc-4943-8cce-3a6d6d61568d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Outlier counts of column: Rooms 269\n","Outlier counts of column: Price 474\n","Outlier counts of column: Distance 792\n","Outlier counts of column: Postcode 558\n","Outlier counts of column: Bedroom2 73\n","Outlier counts of column: Bathroom 371\n","Outlier counts of column: Car 353\n","Outlier counts of column: Landsize 43\n","Outlier counts of column: BuildingArea 9\n","Outlier counts of column: YearBuilt 9\n","Outlier counts of column: Lattitude 324\n","Outlier counts of column: Longtitude 315\n","Outlier counts of column: Propertycount 844\n"]}]},{"cell_type":"code","source":["df.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":512},"id":"lFboKIgQIhX4","executionInfo":{"status":"ok","timestamp":1698163937901,"user_tz":-180,"elapsed":334,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"c0fd8d9c-e156-4dc3-d3d8-7db2a0643532"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-11-2f6f6606aa2c>:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  df.corr()\n"]},{"output_type":"execute_result","data":{"text/plain":["                  Rooms     Price  Distance  Postcode  Bedroom2  Bathroom  \\\n","Rooms          1.000000  0.468995  0.300691  0.047334  0.972497  0.589567   \n","Price          0.468995  1.000000 -0.183713  0.188211  0.434747  0.361647   \n","Distance       0.300691 -0.183713  1.000000  0.213541  0.300787  0.151293   \n","Postcode       0.047334  0.188211  0.213541  1.000000  0.058054  0.111601   \n","Bedroom2       0.972497  0.434747  0.300787  0.058054  1.000000  0.592526   \n","Bathroom       0.589567  0.361647  0.151293  0.111601  0.592526  1.000000   \n","Car            0.415468  0.192249  0.269077  0.059963  0.417653  0.315730   \n","Landsize       0.194675  0.103414  0.158216  0.057447  0.201433  0.108611   \n","BuildingArea   0.620396  0.452130  0.157348  0.082982  0.615851  0.546008   \n","YearBuilt     -0.015961 -0.376396  0.347225 -0.026739 -0.005236  0.177112   \n","Lattitude      0.011280 -0.272323 -0.028705 -0.465576  0.009905 -0.058775   \n","Longtitude     0.120249  0.208586  0.332345  0.495008  0.125947  0.104761   \n","Propertycount -0.062682 -0.025097 -0.105943  0.084654 -0.039309 -0.011172   \n","\n","                    Car  Landsize  BuildingArea  YearBuilt  Lattitude  \\\n","Rooms          0.415468  0.194675      0.620396  -0.015961   0.011280   \n","Price          0.192249  0.103414      0.452130  -0.376396  -0.272323   \n","Distance       0.269077  0.158216      0.157348   0.347225  -0.028705   \n","Postcode       0.059963  0.057447      0.082982  -0.026739  -0.465576   \n","Bedroom2       0.417653  0.201433      0.615851  -0.005236   0.009905   \n","Bathroom       0.315730  0.108611      0.546008   0.177112  -0.058775   \n","Car            1.000000  0.196386      0.349631   0.152274  -0.012896   \n","Landsize       0.196386  1.000000      0.183655   0.033776   0.006864   \n","BuildingArea   0.349631  0.183655      1.000000   0.073768  -0.051515   \n","YearBuilt      0.152274  0.033776      0.073768   1.000000   0.107364   \n","Lattitude     -0.012896  0.006864     -0.051515   0.107364   1.000000   \n","Longtitude     0.084759  0.108251      0.108889  -0.006853  -0.305841   \n","Propertycount -0.025989 -0.023956     -0.029461   0.010037  -0.031963   \n","\n","               Longtitude  Propertycount  \n","Rooms            0.120249      -0.062682  \n","Price            0.208586      -0.025097  \n","Distance         0.332345      -0.105943  \n","Postcode         0.495008       0.084654  \n","Bedroom2         0.125947      -0.039309  \n","Bathroom         0.104761      -0.011172  \n","Car              0.084759      -0.025989  \n","Landsize         0.108251      -0.023956  \n","BuildingArea     0.108889      -0.029461  \n","YearBuilt       -0.006853       0.010037  \n","Lattitude       -0.305841      -0.031963  \n","Longtitude       1.000000      -0.002992  \n","Propertycount   -0.002992       1.000000  "],"text/html":["\n","  <div id=\"df-e6d6f526-4302-4004-918b-648ca20a29b0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rooms</th>\n","      <th>Price</th>\n","      <th>Distance</th>\n","      <th>Postcode</th>\n","      <th>Bedroom2</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>Landsize</th>\n","      <th>BuildingArea</th>\n","      <th>YearBuilt</th>\n","      <th>Lattitude</th>\n","      <th>Longtitude</th>\n","      <th>Propertycount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Rooms</th>\n","      <td>1.000000</td>\n","      <td>0.468995</td>\n","      <td>0.300691</td>\n","      <td>0.047334</td>\n","      <td>0.972497</td>\n","      <td>0.589567</td>\n","      <td>0.415468</td>\n","      <td>0.194675</td>\n","      <td>0.620396</td>\n","      <td>-0.015961</td>\n","      <td>0.011280</td>\n","      <td>0.120249</td>\n","      <td>-0.062682</td>\n","    </tr>\n","    <tr>\n","      <th>Price</th>\n","      <td>0.468995</td>\n","      <td>1.000000</td>\n","      <td>-0.183713</td>\n","      <td>0.188211</td>\n","      <td>0.434747</td>\n","      <td>0.361647</td>\n","      <td>0.192249</td>\n","      <td>0.103414</td>\n","      <td>0.452130</td>\n","      <td>-0.376396</td>\n","      <td>-0.272323</td>\n","      <td>0.208586</td>\n","      <td>-0.025097</td>\n","    </tr>\n","    <tr>\n","      <th>Distance</th>\n","      <td>0.300691</td>\n","      <td>-0.183713</td>\n","      <td>1.000000</td>\n","      <td>0.213541</td>\n","      <td>0.300787</td>\n","      <td>0.151293</td>\n","      <td>0.269077</td>\n","      <td>0.158216</td>\n","      <td>0.157348</td>\n","      <td>0.347225</td>\n","      <td>-0.028705</td>\n","      <td>0.332345</td>\n","      <td>-0.105943</td>\n","    </tr>\n","    <tr>\n","      <th>Postcode</th>\n","      <td>0.047334</td>\n","      <td>0.188211</td>\n","      <td>0.213541</td>\n","      <td>1.000000</td>\n","      <td>0.058054</td>\n","      <td>0.111601</td>\n","      <td>0.059963</td>\n","      <td>0.057447</td>\n","      <td>0.082982</td>\n","      <td>-0.026739</td>\n","      <td>-0.465576</td>\n","      <td>0.495008</td>\n","      <td>0.084654</td>\n","    </tr>\n","    <tr>\n","      <th>Bedroom2</th>\n","      <td>0.972497</td>\n","      <td>0.434747</td>\n","      <td>0.300787</td>\n","      <td>0.058054</td>\n","      <td>1.000000</td>\n","      <td>0.592526</td>\n","      <td>0.417653</td>\n","      <td>0.201433</td>\n","      <td>0.615851</td>\n","      <td>-0.005236</td>\n","      <td>0.009905</td>\n","      <td>0.125947</td>\n","      <td>-0.039309</td>\n","    </tr>\n","    <tr>\n","      <th>Bathroom</th>\n","      <td>0.589567</td>\n","      <td>0.361647</td>\n","      <td>0.151293</td>\n","      <td>0.111601</td>\n","      <td>0.592526</td>\n","      <td>1.000000</td>\n","      <td>0.315730</td>\n","      <td>0.108611</td>\n","      <td>0.546008</td>\n","      <td>0.177112</td>\n","      <td>-0.058775</td>\n","      <td>0.104761</td>\n","      <td>-0.011172</td>\n","    </tr>\n","    <tr>\n","      <th>Car</th>\n","      <td>0.415468</td>\n","      <td>0.192249</td>\n","      <td>0.269077</td>\n","      <td>0.059963</td>\n","      <td>0.417653</td>\n","      <td>0.315730</td>\n","      <td>1.000000</td>\n","      <td>0.196386</td>\n","      <td>0.349631</td>\n","      <td>0.152274</td>\n","      <td>-0.012896</td>\n","      <td>0.084759</td>\n","      <td>-0.025989</td>\n","    </tr>\n","    <tr>\n","      <th>Landsize</th>\n","      <td>0.194675</td>\n","      <td>0.103414</td>\n","      <td>0.158216</td>\n","      <td>0.057447</td>\n","      <td>0.201433</td>\n","      <td>0.108611</td>\n","      <td>0.196386</td>\n","      <td>1.000000</td>\n","      <td>0.183655</td>\n","      <td>0.033776</td>\n","      <td>0.006864</td>\n","      <td>0.108251</td>\n","      <td>-0.023956</td>\n","    </tr>\n","    <tr>\n","      <th>BuildingArea</th>\n","      <td>0.620396</td>\n","      <td>0.452130</td>\n","      <td>0.157348</td>\n","      <td>0.082982</td>\n","      <td>0.615851</td>\n","      <td>0.546008</td>\n","      <td>0.349631</td>\n","      <td>0.183655</td>\n","      <td>1.000000</td>\n","      <td>0.073768</td>\n","      <td>-0.051515</td>\n","      <td>0.108889</td>\n","      <td>-0.029461</td>\n","    </tr>\n","    <tr>\n","      <th>YearBuilt</th>\n","      <td>-0.015961</td>\n","      <td>-0.376396</td>\n","      <td>0.347225</td>\n","      <td>-0.026739</td>\n","      <td>-0.005236</td>\n","      <td>0.177112</td>\n","      <td>0.152274</td>\n","      <td>0.033776</td>\n","      <td>0.073768</td>\n","      <td>1.000000</td>\n","      <td>0.107364</td>\n","      <td>-0.006853</td>\n","      <td>0.010037</td>\n","    </tr>\n","    <tr>\n","      <th>Lattitude</th>\n","      <td>0.011280</td>\n","      <td>-0.272323</td>\n","      <td>-0.028705</td>\n","      <td>-0.465576</td>\n","      <td>0.009905</td>\n","      <td>-0.058775</td>\n","      <td>-0.012896</td>\n","      <td>0.006864</td>\n","      <td>-0.051515</td>\n","      <td>0.107364</td>\n","      <td>1.000000</td>\n","      <td>-0.305841</td>\n","      <td>-0.031963</td>\n","    </tr>\n","    <tr>\n","      <th>Longtitude</th>\n","      <td>0.120249</td>\n","      <td>0.208586</td>\n","      <td>0.332345</td>\n","      <td>0.495008</td>\n","      <td>0.125947</td>\n","      <td>0.104761</td>\n","      <td>0.084759</td>\n","      <td>0.108251</td>\n","      <td>0.108889</td>\n","      <td>-0.006853</td>\n","      <td>-0.305841</td>\n","      <td>1.000000</td>\n","      <td>-0.002992</td>\n","    </tr>\n","    <tr>\n","      <th>Propertycount</th>\n","      <td>-0.062682</td>\n","      <td>-0.025097</td>\n","      <td>-0.105943</td>\n","      <td>0.084654</td>\n","      <td>-0.039309</td>\n","      <td>-0.011172</td>\n","      <td>-0.025989</td>\n","      <td>-0.023956</td>\n","      <td>-0.029461</td>\n","      <td>0.010037</td>\n","      <td>-0.031963</td>\n","      <td>-0.002992</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e6d6f526-4302-4004-918b-648ca20a29b0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e6d6f526-4302-4004-918b-648ca20a29b0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e6d6f526-4302-4004-918b-648ca20a29b0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-19e57318-5357-4823-833c-ad8e37c5fff3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-19e57318-5357-4823-833c-ad8e37c5fff3')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-19e57318-5357-4823-833c-ad8e37c5fff3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# Remove features that has a very weak correlation with price, address is not necessary\n","df.drop(columns=[\"Postcode\", \"Landsize\", \"BuildingArea\",\"Lattitude\", \"Longtitude\", \"Propertycount\"], inplace=True)"],"metadata":{"id":"i547W1pwP5Q6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df[[\"Rooms\", \"Type\",\"Bedroom2\"]].groupby([\"Type\",\"Rooms\"]).agg(pd.Series.mode)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":551},"id":"667IpCEpIlRY","executionInfo":{"status":"ok","timestamp":1698163964965,"user_tz":-180,"elapsed":329,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"fd3daf7d-abc9-4d4a-ef9c-a3d225621585"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Bedroom2\n","Type Rooms          \n","h    1.0         1.0\n","     2.0         2.0\n","     3.0         3.0\n","     4.0         4.0\n","     5.0         5.0\n","t    1.0         1.0\n","     2.0         2.0\n","     3.0         3.0\n","     4.0         4.0\n","     5.0         5.0\n","u    1.0         1.0\n","     2.0         2.0\n","     3.0         3.0\n","     4.0         4.0\n","     5.0         5.0"],"text/html":["\n","  <div id=\"df-5e3e94a1-23c6-474c-a515-c4c51936a052\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Bedroom2</th>\n","    </tr>\n","    <tr>\n","      <th>Type</th>\n","      <th>Rooms</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"5\" valign=\"top\">h</th>\n","      <th>1.0</th>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2.0</th>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.0</th>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>4.0</th>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>5.0</th>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"5\" valign=\"top\">t</th>\n","      <th>1.0</th>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2.0</th>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.0</th>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>4.0</th>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>5.0</th>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"5\" valign=\"top\">u</th>\n","      <th>1.0</th>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2.0</th>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.0</th>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>4.0</th>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>5.0</th>\n","      <td>5.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5e3e94a1-23c6-474c-a515-c4c51936a052')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5e3e94a1-23c6-474c-a515-c4c51936a052 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5e3e94a1-23c6-474c-a515-c4c51936a052');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-62be41c4-2a95-487f-8e01-56bd02616ee3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-62be41c4-2a95-487f-8e01-56bd02616ee3')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-62be41c4-2a95-487f-8e01-56bd02616ee3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# Replace missing room values with Bedroom2 if any.\n","missing_room_idx=df.loc[df[\"Rooms\"].isna()][\"Rooms\"].index.tolist()\n","\n","for i in missing_room_idx:\n","    df.loc[i, \"Rooms\"] = df._get_value(i, \"Bedroom2\")"],"metadata":{"id":"lby4hvpTJOH5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Delete the remaining rows with missing room and drop Bedroom2\n","df.dropna(axis=0, subset=\"Rooms\", inplace=True)\n","df.drop(columns=[\"Bedroom2\"], inplace=True)"],"metadata":{"id":"PW9flli4JTgG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"borxe4yrJaz5","executionInfo":{"status":"ok","timestamp":1698165552207,"user_tz":-180,"elapsed":4,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"bc97c733-920f-4164-c478-e18f0658f750"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Suburb             0\n","Address            0\n","Rooms              0\n","Type               0\n","Price           8048\n","Method             0\n","SellerG            0\n","Date               0\n","Distance         789\n","Bathroom        8540\n","Car             9037\n","YearBuilt      19254\n","CouncilArea        3\n","Regionname         3\n","dtype: int64"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# Check missing Regionname rows.\n","df[df[\"Regionname\"].isna()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"loVSjxaUJun0","executionInfo":{"status":"ok","timestamp":1698165554045,"user_tz":-180,"elapsed":4,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"ac1aaf1b-d1c8-4d0c-f2da-017b16c84140"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Suburb           Address  Rooms Type     Price Method SellerG  \\\n","18523    Footscray  2/16 Stafford St    2.0    u  710000.0      S     Jas   \n","26888   Camberwell   2/3 Kingsley St    2.0    h  825000.0     VB  Jellis   \n","29483  Fawkner Lot      1/3 Brian St    3.0    h  616000.0     SP    Brad   \n","\n","             Date  Distance  Bathroom  Car  YearBuilt CouncilArea Regionname  \n","18523  15/07/2017       5.1       NaN  NaN        NaN         NaN        NaN  \n","26888  11/11/2017       7.7       NaN  NaN        NaN         NaN        NaN  \n","29483   6/01/2018       NaN       NaN  NaN        NaN         NaN        NaN  "],"text/html":["\n","  <div id=\"df-fff75e0b-9dfb-45bd-860a-3651c43d9719\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Suburb</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Method</th>\n","      <th>SellerG</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>YearBuilt</th>\n","      <th>CouncilArea</th>\n","      <th>Regionname</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>18523</th>\n","      <td>Footscray</td>\n","      <td>2/16 Stafford St</td>\n","      <td>2.0</td>\n","      <td>u</td>\n","      <td>710000.0</td>\n","      <td>S</td>\n","      <td>Jas</td>\n","      <td>15/07/2017</td>\n","      <td>5.1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>26888</th>\n","      <td>Camberwell</td>\n","      <td>2/3 Kingsley St</td>\n","      <td>2.0</td>\n","      <td>h</td>\n","      <td>825000.0</td>\n","      <td>VB</td>\n","      <td>Jellis</td>\n","      <td>11/11/2017</td>\n","      <td>7.7</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>29483</th>\n","      <td>Fawkner Lot</td>\n","      <td>1/3 Brian St</td>\n","      <td>3.0</td>\n","      <td>h</td>\n","      <td>616000.0</td>\n","      <td>SP</td>\n","      <td>Brad</td>\n","      <td>6/01/2018</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fff75e0b-9dfb-45bd-860a-3651c43d9719')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fff75e0b-9dfb-45bd-860a-3651c43d9719 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fff75e0b-9dfb-45bd-860a-3651c43d9719');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b6f23277-fc9e-4065-af23-19d94488c53d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b6f23277-fc9e-4065-af23-19d94488c53d')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b6f23277-fc9e-4065-af23-19d94488c53d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# Replace missing Regionname with value that is in same Suburb or same Address\n","df.loc[18523 ,\"Regionname\"] = df[\"Regionname\"].mode()[0]\n","df.loc[26888 ,\"Regionname\"] = df[\"Regionname\"].mode()[0]\n","df.loc[29483 ,\"Regionname\"] = df[\"Regionname\"].mode()[0]"],"metadata":{"id":"j0xAYYAMKDzk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df[df[\"CouncilArea\"].isna()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"Rnn4gWlwOCKi","executionInfo":{"status":"ok","timestamp":1698165558065,"user_tz":-180,"elapsed":4,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"128bb0af-1eae-4b00-fec6-14edfcf53531"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Suburb           Address  Rooms Type     Price Method SellerG  \\\n","18523    Footscray  2/16 Stafford St    2.0    u  710000.0      S     Jas   \n","26888   Camberwell   2/3 Kingsley St    2.0    h  825000.0     VB  Jellis   \n","29483  Fawkner Lot      1/3 Brian St    3.0    h  616000.0     SP    Brad   \n","\n","             Date  Distance  Bathroom  Car  YearBuilt CouncilArea  \\\n","18523  15/07/2017       5.1       NaN  NaN        NaN         NaN   \n","26888  11/11/2017       7.7       NaN  NaN        NaN         NaN   \n","29483   6/01/2018       NaN       NaN  NaN        NaN         NaN   \n","\n","                  Regionname  \n","18523  Southern Metropolitan  \n","26888  Southern Metropolitan  \n","29483  Southern Metropolitan  "],"text/html":["\n","  <div id=\"df-f032d115-3704-4cc4-92e5-02f45b37b918\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Suburb</th>\n","      <th>Address</th>\n","      <th>Rooms</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Method</th>\n","      <th>SellerG</th>\n","      <th>Date</th>\n","      <th>Distance</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>YearBuilt</th>\n","      <th>CouncilArea</th>\n","      <th>Regionname</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>18523</th>\n","      <td>Footscray</td>\n","      <td>2/16 Stafford St</td>\n","      <td>2.0</td>\n","      <td>u</td>\n","      <td>710000.0</td>\n","      <td>S</td>\n","      <td>Jas</td>\n","      <td>15/07/2017</td>\n","      <td>5.1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Southern Metropolitan</td>\n","    </tr>\n","    <tr>\n","      <th>26888</th>\n","      <td>Camberwell</td>\n","      <td>2/3 Kingsley St</td>\n","      <td>2.0</td>\n","      <td>h</td>\n","      <td>825000.0</td>\n","      <td>VB</td>\n","      <td>Jellis</td>\n","      <td>11/11/2017</td>\n","      <td>7.7</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Southern Metropolitan</td>\n","    </tr>\n","    <tr>\n","      <th>29483</th>\n","      <td>Fawkner Lot</td>\n","      <td>1/3 Brian St</td>\n","      <td>3.0</td>\n","      <td>h</td>\n","      <td>616000.0</td>\n","      <td>SP</td>\n","      <td>Brad</td>\n","      <td>6/01/2018</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Southern Metropolitan</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f032d115-3704-4cc4-92e5-02f45b37b918')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f032d115-3704-4cc4-92e5-02f45b37b918 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f032d115-3704-4cc4-92e5-02f45b37b918');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e2d046a7-3128-43c5-94d7-6dcc9252cc5d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e2d046a7-3128-43c5-94d7-6dcc9252cc5d')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e2d046a7-3128-43c5-94d7-6dcc9252cc5d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Replace missing CouncilArea with the most common value that is in same suburb\n","df.loc[18523 ,\"CouncilArea\"] = df[\"CouncilArea\"].mode()[0]\n","df.loc[26888 ,\"CouncilArea\"] = df[\"CouncilArea\"].mode()[0]\n","df.loc[29483 ,\"CouncilArea\"] = df[\"CouncilArea\"].mode()[0]"],"metadata":{"id":"c_i3PJcwODri"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Find max distance of houses by grouping YearBuilt.\n","grouped_yearBuilt_by_distance=df[[\"Distance\", \"YearBuilt\"]].groupby(\"YearBuilt\").max()\n","\n","# Since distance and yearbuilt have a strong correlation with each other than the others,\n","# we can replace missing null distance values with checking same yearbuilt.\n","for k1, v1 in df[df[\"Distance\"].isna()][[\"Distance\", \"YearBuilt\"]].iterrows():\n","    for year, val in grouped_yearBuilt_by_distance.iterrows():\n","        if(v1[\"YearBuilt\"] == year):\n","            df.at[k1, \"Distance\"] = val[\"Distance\"]"],"metadata":{"id":"pVttkdUCKi0K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Remove all rows that has missing val in Distance\n","# Yearbuilt has a lot of missing values so it will be discarded\n","# Address is not necessary because of suburb and regionname features\n","# Date is not necessary\n","df.dropna(axis=0, subset=\"Distance\", inplace=True)\n","df.drop([\"Address\", \"YearBuilt\", \"Date\"],axis=1,inplace=True)"],"metadata":{"id":"ub13Y3YQPQud"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Find mean price of houses by grouping Rooms and Regionname\n","grouped_price=df[[\"Price\", \"Rooms\", \"Regionname\"]].groupby([\"Rooms\", \"Regionname\"]).agg(\"mean\")\n","\n","# Replace missing null price with others in same regionname and same room numbers\n","for k1, v1 in df[df[\"Price\"].isna()].iterrows():\n","    for k2, v2 in grouped_price.iterrows():\n","        if(v1[\"Rooms\"] == k2[0] and v1[\"Regionname\"] == k2[1]):\n","            df.at[k1, \"Price\"] = v2[\"Price\"]"],"metadata":{"id":"aPs9Ae_IPXYU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Fill the missing values of Bathroom and Car with mode\n","df['Bathroom'].fillna(df['Bathroom'].mode()[0], inplace=True)\n","df['Car'].fillna(df['Car'].mode()[0], inplace=True)"],"metadata":{"id":"pFefzT3inbEW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Check remaining missing values\n","df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qttJThJrPaCp","executionInfo":{"status":"ok","timestamp":1698166591723,"user_tz":-180,"elapsed":501,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"75224b96-ed56-4a0f-ed79-5df302c35298"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Suburb         0\n","Rooms          0\n","Type           0\n","Price          2\n","Method         0\n","SellerG        0\n","Distance       0\n","Bathroom       0\n","Car            0\n","CouncilArea    0\n","Regionname     0\n","dtype: int64"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["# Drop missing all rows in Price\n","df.dropna(axis=0, subset=\"Price\", inplace=True)"],"metadata":{"id":"5x4sFtxIoqEn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.corrwith(other=df[\"Price\"], numeric_only=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sfjGtZFTH8hI","executionInfo":{"status":"ok","timestamp":1698166849566,"user_tz":-180,"elapsed":338,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"7bf8151e-4a1e-4b1c-ba24-2a29fcba269e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Rooms       0.542496\n","Price       1.000000\n","Distance   -0.176694\n","Bathroom    0.355317\n","Car         0.176983\n","dtype: float64"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DzJ6PQtyH_5d","executionInfo":{"status":"ok","timestamp":1698166978226,"user_tz":-180,"elapsed":4,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"5ff5a60c-980a-47ed-ca48-6e35b1e481a0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 34378 entries, 0 to 34856\n","Data columns (total 11 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   Suburb       34378 non-null  object \n"," 1   Rooms        34378 non-null  float64\n"," 2   Type         34378 non-null  object \n"," 3   Price        34378 non-null  float64\n"," 4   Method       34378 non-null  object \n"," 5   SellerG      34378 non-null  object \n"," 6   Distance     34378 non-null  float64\n"," 7   Bathroom     34378 non-null  float64\n"," 8   Car          34378 non-null  float64\n"," 9   CouncilArea  34378 non-null  object \n"," 10  Regionname   34378 non-null  object \n","dtypes: float64(5), object(6)\n","memory usage: 3.1+ MB\n"]}]},{"cell_type":"code","source":["fig, ax = plt.subplots(figsize=(5, 5))\n","cmap = \"tab20\"\n","center = 0\n","sns.heatmap(df.corr(), annot=True,cmap=cmap)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":577},"id":"yHnToRWYPGP_","executionInfo":{"status":"ok","timestamp":1698167049134,"user_tz":-180,"elapsed":626,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"7b663d7e-13ab-4d59-d5e5-0e70c14368d3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-33-ab1feb131af1>:4: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  sns.heatmap(df.corr(), annot=True,cmap=cmap)\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":33},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["label_encoder = LabelEncoder()\n","df['Renk_Suburb']=label_encoder.fit_transform(df['Suburb'])\n","df['Renk_Type']=label_encoder.fit_transform(df['Type'])\n","df['Renk_Method']=label_encoder.fit_transform(df['Method'])\n","df['Renk_SellerG']=label_encoder.fit_transform(df['SellerG'])\n","df['Renk_CouncilArea']=label_encoder.fit_transform(df['CouncilArea'])\n","df['Renk_Regionname']=label_encoder.fit_transform(df['Regionname'])\n","df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"y9HZ6FUhzPA6","executionInfo":{"status":"ok","timestamp":1698167061886,"user_tz":-180,"elapsed":406,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"d2b716e3-eb53-4815-f03d-9b2c447baf84"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Suburb  Rooms Type         Price Method SellerG  Distance  Bathroom  \\\n","0  Abbotsford    2.0    h  7.416325e+05     SS  Jellis       2.5       1.0   \n","1  Abbotsford    2.0    h  1.480000e+06      S  Biggin       2.5       1.0   \n","2  Abbotsford    2.0    h  1.035000e+06      S  Biggin       2.5       1.0   \n","\n","   Car         CouncilArea             Regionname  Renk_Suburb  Renk_Type  \\\n","0  1.0  Yarra City Council  Northern Metropolitan            0          0   \n","1  1.0  Yarra City Council  Northern Metropolitan            0          0   \n","2  0.0  Yarra City Council  Northern Metropolitan            0          0   \n","\n","   Renk_Method  Renk_SellerG  Renk_CouncilArea  Renk_Regionname  \n","0            6           151                31                2  \n","1            2            32                31                2  \n","2            2            32                31                2  "],"text/html":["\n","  <div id=\"df-b73129fc-02ed-441d-baa1-edbed001160c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Suburb</th>\n","      <th>Rooms</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Method</th>\n","      <th>SellerG</th>\n","      <th>Distance</th>\n","      <th>Bathroom</th>\n","      <th>Car</th>\n","      <th>CouncilArea</th>\n","      <th>Regionname</th>\n","      <th>Renk_Suburb</th>\n","      <th>Renk_Type</th>\n","      <th>Renk_Method</th>\n","      <th>Renk_SellerG</th>\n","      <th>Renk_CouncilArea</th>\n","      <th>Renk_Regionname</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Abbotsford</td>\n","      <td>2.0</td>\n","      <td>h</td>\n","      <td>7.416325e+05</td>\n","      <td>SS</td>\n","      <td>Jellis</td>\n","      <td>2.5</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>Yarra City Council</td>\n","      <td>Northern Metropolitan</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>151</td>\n","      <td>31</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Abbotsford</td>\n","      <td>2.0</td>\n","      <td>h</td>\n","      <td>1.480000e+06</td>\n","      <td>S</td>\n","      <td>Biggin</td>\n","      <td>2.5</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>Yarra City Council</td>\n","      <td>Northern Metropolitan</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>32</td>\n","      <td>31</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Abbotsford</td>\n","      <td>2.0</td>\n","      <td>h</td>\n","      <td>1.035000e+06</td>\n","      <td>S</td>\n","      <td>Biggin</td>\n","      <td>2.5</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>Yarra City Council</td>\n","      <td>Northern Metropolitan</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>32</td>\n","      <td>31</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b73129fc-02ed-441d-baa1-edbed001160c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b73129fc-02ed-441d-baa1-edbed001160c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b73129fc-02ed-441d-baa1-edbed001160c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cef04bd2-9d3c-44f9-9e0e-ff66a5482d6a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cef04bd2-9d3c-44f9-9e0e-ff66a5482d6a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cef04bd2-9d3c-44f9-9e0e-ff66a5482d6a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["kategorik_sutunlar = df.select_dtypes(include=['object', 'category']).columns\n","numerik_sutunlar = df.select_dtypes(include=['int64', 'float64']).columns\n","print(f'numerik_sutunlar- {numerik_sutunlar}\\n'\n","      f'kategorik_sutunlar- {kategorik_sutunlar}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ivKMmI4AGcxW","executionInfo":{"status":"ok","timestamp":1698167069854,"user_tz":-180,"elapsed":304,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"1c2bbac2-e59e-4c27-cab7-2e2b8a114621"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["numerik_sutunlar- Index(['Rooms', 'Price', 'Distance', 'Bathroom', 'Car', 'Renk_Suburb',\n","       'Renk_Type', 'Renk_Method', 'Renk_SellerG', 'Renk_CouncilArea',\n","       'Renk_Regionname'],\n","      dtype='object')\n","kategorik_sutunlar- Index(['Suburb', 'Type', 'Method', 'SellerG', 'CouncilArea', 'Regionname'], dtype='object')\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(12, 10))\n","\n","plt.subplot(2, 2, 1)\n","df['Rooms'].hist(bins=50, label='rooms', alpha=0.6)\n","plt.axvline(np.mean(df['Rooms']), ls='--', c='r', label=\"Mean\")\n","plt.axvline(np.median(df['Rooms']), ls=':', c='g', label=\"Median\")\n","plt.ylabel(\"Counts\")\n","plt.title(\"Rooms Histogram Distribution\");\n","plt.legend()\n","\n","plt.subplot(2, 2, 2)\n","plt.scatter(df['Rooms'], np.random.normal(7, 0.2, size=df.shape[0]), alpha=0.5)\n","plt.title(\"Rooms Scatter Distribution\");\n","\n","plt.subplot(2, 2, 3)\n","sns.boxplot(y=\"Rooms\", data=df)\n","plt.title(\"Rooms Boxplot\");\n","\n","plt.subplot(2, 2, 4)\n","sns.violinplot(y=\"Rooms\", data=df, inner=\"quartile\", bw=0.2)\n","plt.title(\"Rooms Violin\");"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":834},"id":"kpWrg-5cpWZW","executionInfo":{"status":"ok","timestamp":1698168026173,"user_tz":-180,"elapsed":2386,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"2e709841-29f5-44b7-f4e8-020921360131"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1000 with 4 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(12, 10))\n","\n","plt.subplot(2, 2, 1)\n","df['Price'].hist(bins=50, label='Price', alpha=0.6)\n","plt.axvline(np.mean(df['Price']), ls='--', c='r', label=\"Mean\")\n","plt.axvline(np.median(df['Price']), ls=':', c='g', label=\"Median\")\n","plt.ylabel(\"Counts\")\n","plt.title(\"Price Histogram Distribution\");\n","plt.legend()\n","\n","plt.subplot(2, 2, 2)\n","plt.scatter(df['Price'], np.random.normal(7, 0.2, size=df.shape[0]), alpha=0.5)\n","plt.title(\"Price Scatter Distribution\");\n","\n","plt.subplot(2, 2, 3)\n","sns.boxplot(y=\"Price\", data=df)\n","plt.title(\"Price Boxplot\");\n","\n","plt.subplot(2, 2, 4)\n","sns.violinplot(y=\"Price\", data=df, inner=\"quartile\", bw=0.2)\n","plt.title(\"Price Violin\");"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":834},"id":"mDQMkxJKs2jL","executionInfo":{"status":"ok","timestamp":1698168073257,"user_tz":-180,"elapsed":2812,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"5611c910-5073-4c0c-ec4a-fa3c8dfed778"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1000 with 4 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["X = df.drop([\"Price\",\"Suburb\",\"Method\",\"SellerG\",\"CouncilArea\",\"Regionname\",\"Type\"], axis=1)\n","y = df['Price']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"],"metadata":{"id":"uvo7By9cxGTA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Initialize the MinMaxScaler\n","scaler = MinMaxScaler()\n","\n","# Fit and transform the training data using the scaler to make the data between 0 and 1\n","scaled_training_df = scaler.fit_transform(X_train)\n","\n","# Transform the test data, we use 'transform' method for scaling paramaters learned on the train data.\n","scaled_test_df=scaler.transform(X_test)"],"metadata":{"id":"4wML1L4Izcpu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def select_best_model(models, X, y, cv=10, scoring='neg_mean_squared_error'):\n","    \"\"\"\n","    Selects the best model among a list of models using cross-validation and returns a DataFrame with model names and scores.\n","\n","    Parameters:\n","    - models (dict): A dictionary of model names as keys and model objects as values.\n","    - X (array-like): The feature matrix.\n","    - y (array-like): The target variable.\n","    - cv (int, optional): Number of cross-validation folds (default is 5).\n","    - scoring (str, optional): Scoring metric for cross-validation (default is 'neg_mean_squared_error').\n","\n","    Returns:\n","    - results_df (DataFrame): A DataFrame with two columns - 'Model' and 'RMSE Score'.\n","    \"\"\"\n","    model_names = []\n","    rmse_scores = []\n","\n","    for model_name, model in models.items():\n","        # Perform cross-validation\n","        cv_scores = cross_val_score(model, X, y, cv=cv, scoring=scoring)\n","        rmse_score = np.mean(np.sqrt(np.abs(cv_scores)))\n","\n","        # Append the model name and its scores to the lists\n","        model_names.append(model_name)\n","        rmse_scores.append(rmse_score)\n","\n","    # Create a DataFrame from the lists\n","    results_df = pd.DataFrame({'Model': model_names, 'RMSE Score': rmse_scores})\n","\n","    return results_df"],"metadata":{"id":"mtX90L0Rz7XX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["models = {\n","    'Linear Regression': LinearRegression(),\n","    'Ridge Regression': Ridge(),\n","    'Lasso Regression': Lasso(),\n","    'ElasticNet': ElasticNet(),\n","    'SVR': SVR(),\n","    'Decision Tree': DecisionTreeRegressor(),\n","    'Random Forest': RandomForestRegressor(),\n","    'KNeighborsRegressor': KNeighborsRegressor(),\n","    'GradientBoostingRegressor': GradientBoostingRegressor(),\n","    'AdaBoostRegressor': AdaBoostRegressor(),\n","}\n","\n","# Call the function to select the best model and get the results DataFrame\n","results_df = select_best_model(models, X_train, y_train)\n","\n","print(\"Model Comparison Results:\")\n","print(results_df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4oIPAip70Dc-","executionInfo":{"status":"ok","timestamp":1698170451050,"user_tz":-180,"elapsed":442447,"user":{"displayName":"Ayşe Simge ALMAŞ","userId":"10322942801969551242"}},"outputId":"3e876bd0-2bdd-4812-c452-a23f1a2ee9f1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model Comparison Results:\n","                       Model     RMSE Score\n","0          Linear Regression  357015.049558\n","1           Ridge Regression  357015.036090\n","2           Lasso Regression  357015.049612\n","3                 ElasticNet  368675.886836\n","4                        SVR  517068.301985\n","5              Decision Tree  338933.279524\n","6              Random Forest  266705.992066\n","7        KNeighborsRegressor  338093.180308\n","8  GradientBoostingRegressor  259536.808317\n","9          AdaBoostRegressor  380997.831458\n"]}]},{"cell_type":"code","source":["# Grid Search CV\n","gb_reg = GradientBoostingRegressor()\n","\n","# Define the hyperparameters and their possible values to search over\n","param_grid = {\n","    'n_estimators': [10, 20, 30, 40, 50, 60, 100, 200],\n","    'max_depth': [3, 4, 5],\n","    'learning_rate': [0.0001, 0.001, 0.01, 0.1, 1.0],\n","    'subsample': [0.5, 0.7, 1.0]\n","}\n","\n","# Create the GridSearchCV object\n","grid_search = GridSearchCV(estimator=gb_reg, param_grid=param_grid,\n","                           scoring='neg_mean_squared_error', cv=5)\n","\n","# Perform the grid search on your data\n","grid_search.fit(X, y)\n","\n","# Print the best hyperparameters and corresponding score\n","print(\"Best Parameters:\", grid_search.best_params_)\n","print(\"Best RMSE Score:\", np.sqrt(-grid_search.best_score_))"],"metadata":{"id":"QOixIjx220cD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["selected_model = GradientBoostingRegressor(n_estimators=200, max_depth=5,\n","                                           learning_rate=0.1, subsample=1)\n","final_model = selected_model.fit(X_train,y_train)\n","final_model_pred = final_model.predict(X_test)\n","print(math.sqrt(mean_squared_error(y_test, final_model_pred)))"],"metadata":{"id":"5xWdWIGeAl1U"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"Final Model Mean Squared Error\", mean_squared_error(y_test, final_model_pred))\n","print(\"Final Model Root Mean Squared Error\", math.sqrt(mean_squared_error(y_test, final_model_pred)))\n","print(\"Final Model Mean Absolute Error\", mean_absolute_error(y_test, final_model_pred))\n","print(\"Final Model R2 Score\", r2_score(y_test, final_model_pred))"],"metadata":{"id":"gUhoUVMaA14s"},"execution_count":null,"outputs":[]}]}